페이징 처리 - 영속(persistence)계층, 비즈니스 계층
-->네트워크를 통해 데이터를 전송 받을 때 가능하면 최소한의 데이터만을 전송하기 위해

핵심 1)사용자에게 필요한 만큼의 데이터를 전송 2)서버에서 최대한 빠르게 결과를 만들어 내기
-1단계: URI의 문자열을 조절해서 원하는 페이지의 데이터가 출력되도록 하는 단계
-2단계: 목록 페이지 하단에 페이지 번호를 보여주고 클릭하면 페이지를 이동하는 단계
-3단계: 목록 페이지에서 조회나 수정 작업을 한 후에 다시 원래의 목록 페이지로 이동할 수 있게 처리

1) a태그의 href속성을 이용해서 직접 이동할 URI를 지정하는 방식
2) form태그를 이용해서 링크를 클릭하면 여러 정보를 전달하는 방식
a태그는 많은 양의 반복적인 링크 정보가 생성되지만 form태그를 이용하는 경우 필요한 정보가 태그 안에 작성되어서 사용되기 때문에 구현에 있어서 보다 편리

페이징 처리의 원칙
1. 페이징 처리는 반드시 GET방식으로
2. 페이징 처리가 되면 조회 화면에서 반드시 목록가기가 필요
3. 3페이지에서 조회가 되면 다시 목록가기 누르면 3페이지로 다시 이동되어야 함
4. 페이징 처리에는 반드시 필요한 페이지 번호만을 제공

많은 양의 데이터 처리를 위해 필요한 sql문
insert into tbl_board(title, content, writer) (select title, content, writer from book_ex.tbl_board);
select count(*) from book_ex.tbl_board;

화면 하단의 페이징 처리
필요한 변수 startPage, endPage, totalCount(끝 페이지 번호를 계산할 때 사용), prev, next


정리
게시판 (CRUD)기능과 페이징 처리, 검색 처리 페이징과 검색은 나중에 한번더 보기
게시판 개발 순서
1. 개발 환경의 준비 및 디비 준비
2. 새로운 게시물을 등록할 수 있는 기능 개발
3. 전체 목록 기능 개발
4. 조회 기능, 삭제 기능, 수정 기능 개발
5. 페이징 처리
6. 검색 처리
게시물의 최종 완성의 형태는 반드시 트랜잭션 관리가 포함되어야 하는데 이는 파트4에서...
